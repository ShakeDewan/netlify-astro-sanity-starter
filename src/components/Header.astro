---
import { type Header } from 'types';
import Action from '@components/Action.astro';
import ResponsiveImage from '@components/ResponsiveImage.astro';

interface Props extends Header {
    'data-sb-field-path'?: string;
}

const { title, logo, navLinks, 'data-sb-field-path': fieldPath } = Astro.props;
const wordmark = (title || 'AI Forward').replace('⚡', '').trim();
---

<nav class="sticky top-0 z-50 border-b border-slate-200/70 bg-white/80 backdrop-blur" data-sb-field-path={fieldPath}>
    <div class="flex items-center justify-between w-full gap-6 px-4 py-3 mx-auto max-w-7xl sm:px-6">
        {
            logo.src ? (
                <a class="flex items-center" href="/">
                    <ResponsiveImage _id={logo._id} src={logo.src} width={logo.dimensions?.width} height={logo.dimensions?.height} alt={logo.alt} />
                </a>
            ) : (
                <a class="flex items-center gap-2 text-lg font-semibold tracking-tight text-slate-900 transition hover:text-primary sm:text-2xl" href="/" data-sb-field-path=".title">
                    <span class="text-primary">⚡</span>
                    <span>{wordmark}</span>
                </a>
            )
        }
        {
            navLinks && navLinks.length > 0 && (
                <>
                    <ul class="hidden items-center gap-1 rounded-full border border-slate-200/80 bg-white/60 px-2 py-1 text-sm font-medium text-slate-700 shadow-sm lg:flex" data-sb-field-path=".navLinks">
                        {navLinks.map((item, index) => (
                            <li>
                                <Action
                                    action={item}
                                    class:list={[
                                        item._type === 'actionLink'
                                            ? 'px-4 py-2 text-sm font-medium text-slate-700 transition hover:text-primary'
                                            : 'btn-sm rounded-full px-6 font-semibold shadow-lg shadow-primary/20'
                                    ]}
                                    data-sb-field-path={`.${index}`}
                                />
                            </li>
                        ))}
                    </ul>
                    <div class="relative lg:hidden">
                        <button
                            class="relative z-[2] inline-flex h-11 w-11 items-center justify-center rounded-full border border-slate-200/80 bg-white/80 shadow-sm backdrop-blur nav-toggle"
                            aria-label="Open Menu"
                            aria-expanded="false"
                            aria-controls="nav-panel"
                        >
                            <span class="nav-toggle-icon" />
                        </button>
                        <div id="nav-panel" class="nav-panel absolute -right-2 -top-3 z-[1] w-[min(20rem,calc(100vw-1.5rem))] overflow-hidden rounded-3xl border border-slate-200/80 bg-white/95 shadow-2xl backdrop-blur">
                            <ul class="flex flex-col gap-1 px-4 pb-5 pt-16 text-base" data-sb-field-path=".navLinks">
                                {navLinks.map((item, index) => (
                                    <li>
                                        <Action
                                            action={item}
                                            class:list={[
                                                item._type === 'actionLink'
                                                    ? 'block rounded-full px-4 py-2.5 text-left text-slate-700 transition hover:bg-slate-100'
                                                    : 'w-full rounded-full px-5 py-3 font-semibold shadow-lg shadow-primary/20'
                                            ]}
                                            data-sb-field-path={`.${index}`}
                                        />
                                    </li>
                                ))}
                            </ul>
                        </div>
                    </div>
                </>
            )
        }
    </div>
</nav>

<style>
    @reference "../styles/globals.css";
    .nav-panel {
        @apply origin-top-right opacity-0 scale-90 invisible;
        transition:
            transform 0.25s cubic-bezier(0.4, 0, 0.2, 1),
            opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1),
            visibility 0s 0.25s;
    }
    .nav-panel.is-visible {
        @apply scale-100 opacity-100 visible;
        transition: 0.25s;
    }
    .nav-toggle-icon {
        @apply block relative bg-current rounded transition;
        width: 1.5rem;
        height: 0.125rem;
    }
    .nav-toggle-icon:before,
    .nav-toggle-icon:after {
        @apply block absolute bg-current rounded transition-all;
        content: '';
        width: 1.5rem;
        height: 0.125rem;
    }
    .nav-toggle-icon:before {
        top: -0.5rem;
    }
    .nav-toggle-icon:after {
        top: 0.5rem;
    }
    .nav-toggle-icon.is-active {
        @apply bg-transparent;
    }
    .nav-toggle-icon.is-active:before {
        top: 0;
        margin-top: -0.5625rem;
        transform: translateY(0.5rem) rotate(-45deg);
    }
    .nav-toggle-icon.is-active:after {
        top: 0;
        margin-top: -0.5625rem;
        transform: translateY(0.5rem) rotate(45deg);
    }
</style>

<script>
    function navToggle() {
        const nav = document.querySelector('.nav-panel');
        const navToggleBtn = document.querySelector('.nav-toggle');
        const navToggleIcon = document.querySelector('.nav-toggle-icon');
        navToggleBtn?.addEventListener('click', () => {
            const isMenuExpanded = navToggleBtn.getAttribute('aria-expanded') === 'true';
            navToggleBtn.setAttribute('aria-expanded', isMenuExpanded ? 'false' : 'true');
            navToggleBtn.setAttribute('aria-label', isMenuExpanded ? 'Open Menu' : 'Close Menu');
            navToggleIcon?.classList.toggle('is-active');
            nav?.classList.toggle('is-visible');
        });
    }
    navToggle();
    document.addEventListener('astro:after-swap', navToggle);
</script>
